{"remainingRequest":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/abarillas/projects/CoreUI_Nuxt3/public_html/src/views/editors/CodeEditors.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/src/views/editors/CodeEditors.vue","mtime":1542198414000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport VueCodeMirror from 'vue-codemirror'\n// require styles\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/theme/eclipse.css'\nimport 'codemirror/mode/markdown/markdown'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/xml/xml'\n\nimport sampleCode from './_examples'\n\n// global use\nVue.use(VueCodeMirror)\n\nexport default {\n  name: 'code-editors',\n  components: {\n    VueCodeMirror\n  },\n  data () {\n    return {\n      code: sampleCode.xml,\n      editorOption: {\n        tabSize: 4,\n        styleActiveLine: true,\n        lineNumbers: true,\n        lineWrapping: true,\n        line: true,\n        mode: 'xml',\n        theme: 'eclipse',\n        autofocus: true\n      },\n      selectedMode: 'xml',\n      selectedTheme: 'eclipse'\n    }\n  },\n  computed: {\n    codemirror () {\n      return this.$refs.vueCm.codemirror\n    }\n  },\n  methods: {\n    onThemeChange (e) {\n      this.editorOption.theme = e.target.value\n    },\n    onModeChange (e) {\n      this.editorOption.mode = e.target.value\n      this.code = sampleCode[this.editorOption.mode]\n    }\n  },\n  mounted () {\n    if (this.codemirror.options.autofocus) {\n      this.codemirror.setSize('100%', '50vh')\n      this.codemirror.focus()\n    }\n    setTimeout(() => {\n      this.code += '\\n\\n\\t~haha~'\n    }, 2000)\n  }\n}\n",{"version":3,"sources":["CodeEditors.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CodeEditors.vue","sourceRoot":"src/views/editors","sourcesContent":["<template>\n  <div class=\"animated fadeIn\">\n    <b-card show-footer>\n      <div slot=\"header\">\n        CodeMirror\n        <a href=\"https://coreui.io/pro/vue/\" rel=\"noreferrer noopener\" target=\"_blank\" class=\"badge badge-danger ml-1\">CoreUI Pro</a>\n        <div class=\"card-header-actions\">\n          <a href=\"https://github.com/surmon-china/vue-codemirror\" rel=\"noreferrer noopener\" target=\"_blank\" class=\"card-header-action\">\n            <small class=\"text-muted\">docs</small>\n          </a>\n        </div>\n      </div>\n      <codemirror ref=\"vueCm\" v-model=\"code\" :options=\"editorOption\"></codemirror>\n      <div slot=\"footer\">\n        <b-form inline>\n          <!--<b-form-fieldset>-->\n          <b-form-group>\n            <b-form-select :plain=\"true\" size=\"sm\" name=\"selectedTheme\" v-model=\"selectedTheme\" @change.native=\"onThemeChange($event)\">\n              <option value=\"material\">material</option>\n              <option value=\"eclipse\">eclipse</option>\n            </b-form-select>\n          </b-form-group>\n          <b-form-group>\n            <b-form-select :plain=\"true\" size=\"sm\" name=\"selectedMode\" v-model=\"selectedMode\" @change.native=\"onModeChange($event)\">\n              <option value=\"markdown\">markdown</option>\n              <option value=\"javascript\">javascript</option>\n              <option value=\"xml\">html</option>\n            </b-form-select>\n          </b-form-group>\n        <!--</b-form-fieldset>-->\n        </b-form>\n      </div>\n  </b-card>\n</div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport VueCodeMirror from 'vue-codemirror'\n// require styles\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/theme/eclipse.css'\nimport 'codemirror/mode/markdown/markdown'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/xml/xml'\n\nimport sampleCode from './_examples'\n\n// global use\nVue.use(VueCodeMirror)\n\nexport default {\n  name: 'code-editors',\n  components: {\n    VueCodeMirror\n  },\n  data () {\n    return {\n      code: sampleCode.xml,\n      editorOption: {\n        tabSize: 4,\n        styleActiveLine: true,\n        lineNumbers: true,\n        lineWrapping: true,\n        line: true,\n        mode: 'xml',\n        theme: 'eclipse',\n        autofocus: true\n      },\n      selectedMode: 'xml',\n      selectedTheme: 'eclipse'\n    }\n  },\n  computed: {\n    codemirror () {\n      return this.$refs.vueCm.codemirror\n    }\n  },\n  methods: {\n    onThemeChange (e) {\n      this.editorOption.theme = e.target.value\n    },\n    onModeChange (e) {\n      this.editorOption.mode = e.target.value\n      this.code = sampleCode[this.editorOption.mode]\n    }\n  },\n  mounted () {\n    if (this.codemirror.options.autofocus) {\n      this.codemirror.setSize('100%', '50vh')\n      this.codemirror.focus()\n    }\n    setTimeout(() => {\n      this.code += '\\n\\n\\t~haha~'\n    }, 2000)\n  }\n}\n</script>\n"]}]}