{"remainingRequest":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/abarillas/projects/CoreUI_Nuxt3/public_html/src/views/forms/ValidationForms.vue?vue&type=template&id=343f588c&scoped=true&","dependencies":[{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/src/views/forms/ValidationForms.vue","mtime":1542198414000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"animated fadeIn\" },\n    [\n      _c(\n        \"b-card\",\n        { attrs: { \"no-body\": \"\" } },\n        [\n          _c(\"b-card-header\", [\n            _c(\"i\", { staticClass: \"icon-note\" }),\n            _vm._v(\" Form Validation\\n      \"),\n            _c(\n              \"a\",\n              {\n                staticClass: \"badge badge-danger\",\n                attrs: { href: \"https://coreui.io/pro/vue/\" }\n              },\n              [_vm._v(\"CoreUI Pro\")]\n            ),\n            _c(\"div\", { staticClass: \"card-header-actions\" }, [\n              _c(\n                \"a\",\n                {\n                  staticClass: \"card-header-action\",\n                  attrs: {\n                    href: \"https://github.com/monterail/vuelidate\",\n                    target: \"_blank\",\n                    rel: \"noreferrer noopener\"\n                  }\n                },\n                [_c(\"small\", { staticClass: \"text-muted\" }, [_vm._v(\"docs\")])]\n              )\n            ])\n          ]),\n          _c(\n            \"b-card-body\",\n            [\n              _c(\n                \"b-link\",\n                {\n                  attrs: {\n                    href: \"https://monterail.github.io/vuelidate\",\n                    target: \"_blank\",\n                    rel: \"noreferrer noopener\"\n                  }\n                },\n                [_vm._v(\"Vuelidate\")]\n              ),\n              _vm._v(\" provides \"),\n              _c(\"cite\", [\n                _vm._v(\"Simple, lightweight model-based validation for Vue.js\")\n              ]),\n              _c(\"hr\"),\n              _c(\n                \"b-row\",\n                [\n                  _c(\n                    \"b-col\",\n                    { attrs: { lg: \"6\" } },\n                    [\n                      _c(\n                        \"b-form\",\n                        {\n                          attrs: { novalidate: \"\" },\n                          on: {\n                            submit: function($event) {\n                              $event.preventDefault()\n                              return _vm.onSubmit($event)\n                            },\n                            reset: function($event) {\n                              $event.preventDefault()\n                              return _vm.onReset($event)\n                            }\n                          }\n                        },\n                        [\n                          _c(\n                            \"b-form-group\",\n                            {\n                              attrs: {\n                                id: \"firstNameInputGroup1\",\n                                label: \"First Name\",\n                                \"label-for\": \"firstname\"\n                              }\n                            },\n                            [\n                              _c(\"b-form-input\", {\n                                attrs: {\n                                  id: \"firstName\",\n                                  type: \"text\",\n                                  state: _vm.chkState(\"firstName\"),\n                                  \"aria-describedby\": \"input1LiveFeedback1\",\n                                  placeholder: \"First Name\",\n                                  autocomplete: \"given-name\",\n                                  autofocus: \"\"\n                                },\n                                model: {\n                                  value: _vm.$v.form.firstName.$model,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.$v.form.firstName,\n                                      \"$model\",\n                                      typeof $$v === \"string\" ? $$v.trim() : $$v\n                                    )\n                                  },\n                                  expression: \"$v.form.firstName.$model\"\n                                }\n                              }),\n                              _c(\n                                \"b-form-invalid-feedback\",\n                                { attrs: { id: \"input1LiveFeedback1\" } },\n                                [\n                                  _vm._v(\n                                    \"\\n                This is a required field and must be at least 2 characters\\n              \"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"b-form-group\",\n                            {\n                              attrs: {\n                                id: \"lastNameInputGroup2\",\n                                label: \"Last Name\",\n                                \"label-for\": \"lastName\"\n                              }\n                            },\n                            [\n                              _c(\"b-form-input\", {\n                                attrs: {\n                                  id: \"lastName\",\n                                  type: \"text\",\n                                  state: _vm.chkState(\"lastName\"),\n                                  \"aria-describedby\": \"input1LiveFeedback2\",\n                                  placeholder: \"Last Name\",\n                                  autocomplete: \"family-name\"\n                                },\n                                model: {\n                                  value: _vm.$v.form.lastName.$model,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.$v.form.lastName,\n                                      \"$model\",\n                                      typeof $$v === \"string\" ? $$v.trim() : $$v\n                                    )\n                                  },\n                                  expression: \"$v.form.lastName.$model\"\n                                }\n                              }),\n                              _c(\n                                \"b-form-invalid-feedback\",\n                                { attrs: { id: \"input1LiveFeedback2\" } },\n                                [\n                                  _vm._v(\n                                    \"\\n                This is a required field and must be at least 1 character\\n              \"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"b-form-group\",\n                            {\n                              attrs: {\n                                id: \"userNameInputGroup3\",\n                                label: \"User Name\",\n                                \"label-for\": \"userName\"\n                              }\n                            },\n                            [\n                              _c(\"b-form-input\", {\n                                attrs: {\n                                  id: \"userName\",\n                                  type: \"text\",\n                                  state: _vm.chkState(\"userName\"),\n                                  \"aria-describedby\": \"input1LiveFeedback3\",\n                                  placeholder: \"User Name\",\n                                  autocomplete: \"username\"\n                                },\n                                model: {\n                                  value: _vm.$v.form.userName.$model,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.$v.form.userName,\n                                      \"$model\",\n                                      typeof $$v === \"string\" ? $$v.trim() : $$v\n                                    )\n                                  },\n                                  expression: \"$v.form.userName.$model\"\n                                }\n                              }),\n                              _c(\n                                \"b-form-invalid-feedback\",\n                                { attrs: { id: \"input1LiveFeedback3\" } },\n                                [\n                                  _vm._v(\n                                    \"\\n                This is a required field and must be at least 5 characters\\n              \"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"b-form-group\",\n                            {\n                              attrs: {\n                                id: \"emailInputGroup4\",\n                                label: \"Email\",\n                                \"label-for\": \"email\"\n                              }\n                            },\n                            [\n                              _c(\"b-form-input\", {\n                                attrs: {\n                                  id: \"email\",\n                                  type: \"email\",\n                                  state: _vm.chkState(\"email\"),\n                                  \"aria-describedby\": \"input1LiveFeedback4\",\n                                  placeholder: \"Email\",\n                                  autocomplete: \"email\"\n                                },\n                                model: {\n                                  value: _vm.$v.form.email.$model,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.$v.form.email,\n                                      \"$model\",\n                                      typeof $$v === \"string\" ? $$v.trim() : $$v\n                                    )\n                                  },\n                                  expression: \"$v.form.email.$model\"\n                                }\n                              }),\n                              _c(\n                                \"b-form-invalid-feedback\",\n                                { attrs: { id: \"input1LiveFeedback4\" } },\n                                [\n                                  _vm._v(\n                                    \"\\n                This is a required field and must be valid e-mail address\\n              \"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"b-row\",\n                            [\n                              _c(\n                                \"b-col\",\n                                { attrs: { md: \"6\" } },\n                                [\n                                  _c(\n                                    \"b-form-group\",\n                                    {\n                                      attrs: {\n                                        id: \"passInputGroup5\",\n                                        label: \"Password\",\n                                        \"label-for\": \"password\"\n                                      }\n                                    },\n                                    [\n                                      _c(\"b-form-input\", {\n                                        attrs: {\n                                          id: \"password\",\n                                          type: \"password\",\n                                          state: _vm.chkState(\"password\"),\n                                          \"aria-describedby\":\n                                            \"input1LiveFeedback5\",\n                                          placeholder: \"Password\",\n                                          autocomplete: \"new-password\"\n                                        },\n                                        model: {\n                                          value: _vm.$v.form.password.$model,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.$v.form.password,\n                                              \"$model\",\n                                              typeof $$v === \"string\"\n                                                ? $$v.trim()\n                                                : $$v\n                                            )\n                                          },\n                                          expression: \"$v.form.password.$model\"\n                                        }\n                                      }),\n                                      _c(\n                                        \"b-form-invalid-feedback\",\n                                        {\n                                          attrs: { id: \"input1LiveFeedback5\" }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                    Required password containing at least: number, uppercase and lowercase letter, 8 characters\\n                  \"\n                                          )\n                                        ]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              ),\n                              _c(\n                                \"b-col\",\n                                { attrs: { md: \"6\" } },\n                                [\n                                  _c(\n                                    \"b-form-group\",\n                                    {\n                                      attrs: {\n                                        id: \"confPassInputGroup6\",\n                                        label: \"Confirm password\",\n                                        \"label-for\": \"confirm_password\"\n                                      }\n                                    },\n                                    [\n                                      _c(\"b-form-input\", {\n                                        attrs: {\n                                          id: \"confirm_password\",\n                                          type: \"password\",\n                                          state: _vm.chkState(\n                                            \"confirmPassword\"\n                                          ),\n                                          \"aria-describedby\":\n                                            \"input1LiveFeedback6\",\n                                          placeholder: \"Confirm password\",\n                                          autocomplete: \"new-password\"\n                                        },\n                                        model: {\n                                          value:\n                                            _vm.$v.form.confirmPassword.$model,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.$v.form.confirmPassword,\n                                              \"$model\",\n                                              typeof $$v === \"string\"\n                                                ? $$v.trim()\n                                                : $$v\n                                            )\n                                          },\n                                          expression:\n                                            \"$v.form.confirmPassword.$model\"\n                                        }\n                                      }),\n                                      _c(\n                                        \"b-form-invalid-feedback\",\n                                        {\n                                          attrs: { id: \"input1LiveFeedback6\" }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                    Passwords must match\\n                  \"\n                                          )\n                                        ]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"b-form-group\",\n                            {\n                              attrs: {\n                                \"invalid-feedback\": _vm.invCheck,\n                                state: _vm.chkState(\"accept\")\n                              }\n                            },\n                            [\n                              _c(\n                                \"b-form-checkbox\",\n                                {\n                                  attrs: {\n                                    id: \"accept\",\n                                    state: _vm.chkState(\"accept\"),\n                                    \"aria-describedby\": \"input1LiveFeedback7\"\n                                  },\n                                  model: {\n                                    value: _vm.$v.form.accept.$model,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.$v.form.accept,\n                                        \"$model\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"$v.form.accept.$model\"\n                                  }\n                                },\n                                [\n                                  _c(\"strong\", [\n                                    _vm._v(\"I accept the terms of use\")\n                                  ])\n                                ]\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"b-button\",\n                            {\n                              attrs: {\n                                type: \"submit\",\n                                variant: \"primary\",\n                                disabled: _vm.$v.form.$invalid || _vm.submitted\n                              }\n                            },\n                            [_vm._v(\"\\n              Submit\\n            \")]\n                          ),\n                          _c(\n                            \"b-button\",\n                            {\n                              staticClass: \"ml-1\",\n                              attrs: {\n                                type: \"submit\",\n                                variant: \"success\",\n                                disabled: !_vm.$v.form.$invalid\n                              }\n                            },\n                            [_vm._v(\"\\n              Validate\\n            \")]\n                          ),\n                          _c(\n                            \"b-button\",\n                            {\n                              staticClass: \"ml-1\",\n                              attrs: {\n                                type: \"reset\",\n                                variant: \"danger\",\n                                disabled: !_vm.isDirty\n                              }\n                            },\n                            [_vm._v(\"Reset\")]\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\"br\")\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-col\",\n                    { attrs: { lg: \"6\" } },\n                    [\n                      _c(\"b-card\", { attrs: { \"bg-variant\": _vm.feedBack } }, [\n                        _c(\"pre\", [_vm._v(_vm._s(_vm.formStr))])\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}