{"remainingRequest":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/babel-loader/lib/index.js!/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/abarillas/projects/CoreUI_Nuxt3/public_html/src/views/GoogleMaps.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/src/views/GoogleMaps.vue","mtime":1542198414000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as VueGoogleMaps from 'vue2-google-maps';\nimport Vue from 'vue';\nVue.use(VueGoogleMaps, {\n  load: {\n    key: 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA' // To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\n    // v: 'OPTIONAL VERSION NUMBER',\n    // libraries: 'places', //// If you need to use place input\n\n  }\n});\nexport default {\n  name: 'google-maps',\n  data: function data() {\n    return {\n      center: {\n        lat: 37.431489,\n        lng: -122.163719\n      },\n      markers: [{\n        position: {\n          lat: 37.431489,\n          lng: -122.163719\n        },\n        label: 'S',\n        draggable: false,\n        title: 'Stanford',\n        www: 'https://www.stanford.edu/'\n      }, {\n        position: {\n          lat: 37.394694,\n          lng: -122.150333\n        },\n        label: 'T',\n        draggable: false,\n        title: 'Tesla',\n        www: 'https://www.tesla.com/'\n      }, {\n        position: {\n          lat: 37.331681,\n          lng: -122.030100\n        },\n        label: 'A',\n        draggable: false,\n        title: 'Apple',\n        www: 'https://www.apple.com/'\n      }, {\n        position: {\n          lat: 37.484722,\n          lng: -122.148333\n        },\n        label: 'F',\n        draggable: false,\n        title: 'Facebook',\n        www: 'https://www.facebook.com/'\n      }],\n      infoContent: '',\n      infoLink: '',\n      infoWindowPos: {\n        lat: 0,\n        lng: 0\n      },\n      infoWinOpen: false,\n      currentMidx: null,\n      // optional: offset infowindow so it visually sits nicely on top of our marker\n      infoOptions: {\n        pixelOffset: {\n          width: 0,\n          height: -35\n        }\n      }\n    };\n  },\n  methods: {\n    toggleInfoWindow: function toggleInfoWindow(marker, idx) {\n      this.infoWindowPos = marker.position;\n      this.infoContent = marker.title;\n      this.infoLink = marker.www; // check if its the same marker that was selected if yes toggle\n\n      if (this.currentMidx === idx) {\n        this.infoWinOpen = !this.infoWinOpen;\n      } else {\n        // if different marker set infowindow to open and reset current marker index\n        this.currentMidx = idx;\n        this.infoWinOpen = true;\n      }\n    }\n  }\n};",{"version":3,"sources":["GoogleMaps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,KAAA,aAAA,MAAA,kBAAA;AACA,OAAA,GAAA,MAAA,KAAA;AAEA,GAAA,CAAA,GAAA,CAAA,aAAA,EAAA;AACA,EAAA,IAAA,EAAA;AACA,IAAA,GAAA,EAAA,yCADA,CAEA;AACA;AACA;;AAJA;AADA,CAAA;AASA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,OADA;AAEA,MAAA,OAAA,EAAA,CAAA;AACA,QAAA,QAAA,EAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,SADA;AAEA,QAAA,KAAA,EAAA,GAFA;AAGA,QAAA,SAAA,EAAA,KAHA;AAIA,QAAA,KAAA,EAAA,UAJA;AAKA,QAAA,GAAA,EAAA;AALA,OAAA,EAMA;AACA,QAAA,QAAA,EAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,SADA;AAEA,QAAA,KAAA,EAAA,GAFA;AAGA,QAAA,SAAA,EAAA,KAHA;AAIA,QAAA,KAAA,EAAA,OAJA;AAKA,QAAA,GAAA,EAAA;AALA,OANA,EAYA;AACA,QAAA,QAAA,EAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,SADA;AAEA,QAAA,KAAA,EAAA,GAFA;AAGA,QAAA,SAAA,EAAA,KAHA;AAIA,QAAA,KAAA,EAAA,OAJA;AAKA,QAAA,GAAA,EAAA;AALA,OAZA,EAkBA;AACA,QAAA,QAAA,EAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,SADA;AAEA,QAAA,KAAA,EAAA,GAFA;AAGA,QAAA,SAAA,EAAA,KAHA;AAIA,QAAA,KAAA,EAAA,UAJA;AAKA,QAAA,GAAA,EAAA;AALA,OAlBA,CAFA;AA2BA,MAAA,WAAA,EAAA,EA3BA;AA4BA,MAAA,QAAA,EAAA,EA5BA;AA6BA,MAAA,aAAA,EAAA;AACA,QAAA,GAAA,EAAA,CADA;AAEA,QAAA,GAAA,EAAA;AAFA,OA7BA;AAiCA,MAAA,WAAA,EAAA,KAjCA;AAkCA,MAAA,WAAA,EAAA,IAlCA;AAmCA;AACA,MAAA,WAAA,EAAA;AACA,QAAA,WAAA,EAAA;AACA,UAAA,KAAA,EAAA,CADA;AAEA,UAAA,MAAA,EAAA,CAAA;AAFA;AADA;AApCA,KAAA;AA2CA,GA9CA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,gBAAA,EAAA,0BAAA,MAAA,EAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,MAAA,CAAA,QAAA;AACA,WAAA,WAAA,GAAA,MAAA,CAAA,KAAA;AACA,WAAA,QAAA,GAAA,MAAA,CAAA,GAAA,CAHA,CAIA;;AACA,UAAA,KAAA,WAAA,KAAA,GAAA,EAAA;AACA,aAAA,WAAA,GAAA,CAAA,KAAA,WAAA;AACA,OAFA,MAEA;AACA;AACA,aAAA,WAAA,GAAA,GAAA;AACA,aAAA,WAAA,GAAA,IAAA;AACA;AACA;AAbA;AA/CA,CAAA","sourcesContent":["<template>\n  <b-card>\n    <div slot=\"header\">\n      Vue Google Maps\n      <a href=\"https://coreui.io/pro/vue/\" rel=\"noreferrer noopener\" target=\"_blank\" class=\"badge badge-danger ml-1\">CoreUI Pro</a>\n      <div class=\"card-header-actions\">\n        <a href=\"https://github.com/xkjyeah/vue-google-maps\" rel=\"noreferrer noopener\" target=\"_blank\" class=\"card-header-action\">\n          <small class=\"text-muted\">docs</small>\n        </a>\n      </div>\n    </div>\n    <gmap-map\n      :center=\"center\"\n      :zoom=\"11\"\n      style=\"height: 400px\"\n    >\n      <gmap-info-window :options=\"infoOptions\" :position=\"infoWindowPos\" :opened=\"infoWinOpen\" @closeclick=\"infoWinOpen=false\">\n        <b-link :href=\"infoLink\" target=\"_blank\">{{infoContent}}</b-link>\n      </gmap-info-window>\n      <gmap-marker\n        :key=\"index\"\n        v-for=\"(m, index) in markers\"\n        :position=\"m.position\"\n        :label=\"m.label\"\n        :title=\"m.title\"\n        :clickable=\"true\"\n        :draggable=\"m.draggable\"\n        @click=\"toggleInfoWindow(m, index)\"\n      ></gmap-marker>\n    </gmap-map>\n  </b-card>\n</template>\n\n<script>\nimport * as VueGoogleMaps from 'vue2-google-maps'\nimport Vue from 'vue'\n\nVue.use(VueGoogleMaps, {\n  load: {\n    key: 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA'\n    // To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\n    // v: 'OPTIONAL VERSION NUMBER',\n    // libraries: 'places', //// If you need to use place input\n  }\n})\n\nexport default {\n  name: 'google-maps',\n  data () {\n    return {\n      center: {lat: 37.431489, lng: -122.163719},\n      markers: [{\n        position: {lat: 37.431489, lng: -122.163719},\n        label: 'S',\n        draggable: false,\n        title: 'Stanford',\n        www: 'https://www.stanford.edu/'\n      }, {\n        position: {lat: 37.394694, lng: -122.150333},\n        label: 'T',\n        draggable: false,\n        title: 'Tesla',\n        www: 'https://www.tesla.com/'\n      }, {\n        position: {lat: 37.331681, lng: -122.030100},\n        label: 'A',\n        draggable: false,\n        title: 'Apple',\n        www: 'https://www.apple.com/'\n      }, {\n        position: {lat: 37.484722, lng: -122.148333},\n        label: 'F',\n        draggable: false,\n        title: 'Facebook',\n        www: 'https://www.facebook.com/'\n      }],\n      infoContent: '',\n      infoLink: '',\n      infoWindowPos: {\n        lat: 0,\n        lng: 0\n      },\n      infoWinOpen: false,\n      currentMidx: null,\n      // optional: offset infowindow so it visually sits nicely on top of our marker\n      infoOptions: {\n        pixelOffset: {\n          width: 0,\n          height: -35\n        }\n      }\n    }\n  },\n  methods: {\n    toggleInfoWindow: function (marker, idx) {\n      this.infoWindowPos = marker.position\n      this.infoContent = marker.title\n      this.infoLink = marker.www\n      // check if its the same marker that was selected if yes toggle\n      if (this.currentMidx === idx) {\n        this.infoWinOpen = !this.infoWinOpen\n      } else {\n        // if different marker set infowindow to open and reset current marker index\n        this.currentMidx = idx\n        this.infoWinOpen = true\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}