{"remainingRequest":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/babel-loader/lib/index.js!/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/abarillas/projects/CoreUI_Nuxt3/public_html/src/views/plugins/Draggable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/src/views/plugins/Draggable.vue","mtime":1542198414000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/abarillas/projects/CoreUI_Nuxt3/public_html/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport VueMq from 'vue-mq';\nimport VueResize from 'vue-resize';\nimport * as VueGridLayout from 'vue-grid-layout';\nimport defaultLayouts from './_layouts';\nvar GridLayout = VueGridLayout.GridLayout;\nvar GridItem = VueGridLayout.GridItem;\nvar breakpoints = {\n  xs: 575,\n  sm: 767,\n  md: 991,\n  lg: 1199,\n  xl: Infinity\n};\nvar gridCols = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 3,\n  xl: 3\n};\nvar localStorageKey = 'CoreUI-Draggable-Layouts';\nVue.use(VueMq, {\n  breakpoints: breakpoints\n});\nVue.use(VueResize);\nexport default {\n  name: 'Draggable',\n  components: {\n    GridLayout: GridLayout,\n    GridItem: GridItem\n  },\n  data: function data() {\n    return {\n      layouts: JSON.parse(localStorage.getItem(localStorageKey) || JSON.stringify(defaultLayouts)),\n      gridCols: gridCols,\n      margin: [10, 10],\n      rowHeight: 1\n    };\n  },\n  mounted: function mounted() {\n    this.$nextTick(\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.updateLayout();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    })));\n  },\n  computed: {\n    mqCols: function mqCols() {\n      var mq = this.$mq;\n      return this.gridCols[mq];\n    },\n    mqLayout: function mqLayout() {\n      var mq = this.$mq;\n      var layouts = this.layouts;\n      return layouts[mq];\n    }\n  },\n  methods: {\n    handleResize: function () {\n      var _handleResize = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(item) {\n        var mq, layout, size;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                mq = this.$mq;\n                layout = this.layouts[mq][item.i];\n\n                if (!layout) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return this.getSize(item.i);\n\n              case 5:\n                size = _context2.sent;\n                layout.h = Math.round((size.height - this.rowHeight) / 10);\n                this.updateLayout();\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleResize(_x) {\n        return _handleResize.apply(this, arguments);\n      }\n\n      return handleResize;\n    }(),\n    getSize: function () {\n      var _getSize = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(itemId) {\n        var card, height, width;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return document.getElementById(\"coreui-dnd-card-no-\".concat(itemId));\n\n              case 2:\n                card = _context3.sent;\n                height = parseInt(window.getComputedStyle(card).getPropertyValue('height'), 10);\n                width = parseInt(window.getComputedStyle(card).getPropertyValue('width'), 10);\n                return _context3.abrupt(\"return\", {\n                  height: height,\n                  width: width\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getSize(_x2) {\n        return _getSize.apply(this, arguments);\n      }\n\n      return getSize;\n    }(),\n    layoutUpdatedEvent: function layoutUpdatedEvent()\n    /*newLayout*/\n    {\n      localStorage.setItem(localStorageKey, JSON.stringify(this.layouts));\n    },\n    resetLayout: function resetLayout() {\n      this.layouts = JSON.parse(JSON.stringify(defaultLayouts));\n      localStorage.removeItem(localStorageKey);\n      this.updateLayout();\n    },\n    updateLayout: function updateLayout() {\n      this.$refs.coreuiGridLayout.layoutUpdate();\n    }\n  }\n};",{"version":3,"sources":["Draggable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"animated fadeIn\">\n    <grid-layout\n      :layout=\"mqLayout\"\n      :col-num=\"mqCols\"\n      :is-draggable=\"true\"\n      :is-resizable=\"false\"\n      :is-mirrored=\"false\"\n      :vertical-compact=\"true\"\n      :margin=\"margin\"\n      :use-css-transforms=\"true\"\n      :row-height=\"rowHeight\"\n      :auto-size=\"true\"\n      ref=\"coreuiGridLayout\"\n      @layout-updated=\"layoutUpdatedEvent\"\n    >\n      <grid-item v-for=\"item in mqLayout\"\n                 class=\"d-flex align-items-start\"\n                 :x=\"item.x\"\n                 :y=\"item.y\"\n                 :w=\"item.w\"\n                 :h=\"item.h\"\n                 :i=\"item.i\"\n                 :key=\"item.i\"\n                 dragAllowFrom=\".card-header\"\n                 dragIgnoreFrom=\".card-body\"\n                 :isDraggable=\"item.static ? false : true\"\n      >\n        <resize-observer @notify=\"handleResize(item)\"></resize-observer>\n        <b-card no-body header-tag=\"header\" :class=\"item.cardClass\" :id=\"`coreui-dnd-card-no-${item.i}`\" class=\"flex-fill\">\n          <div slot=\"header\">\n            {{`${item.cardHeader || 'Drag & Drop'} ${item.i}`}}\n            <a href=\"https://coreui.io/pro/vue/\" rel=\"noreferrer noopener\" target=\"_blank\" class=\"badge badge-danger ml-1\">CoreUI Pro</a>\n            <div class=\"card-header-actions\" v-if=\"item.i==='0'\">\n              <small><b-link variant=\"link\" @click=\"resetLayout\">Reset Layouts</b-link></small>\n            </div>\n          </div>\n          <b-card-body>\n            {{item.cardBody || 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.'}}\n          </b-card-body>\n        </b-card>\n      </grid-item>\n    </grid-layout>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport VueMq from 'vue-mq'\nimport VueResize from 'vue-resize'\nimport * as VueGridLayout from 'vue-grid-layout'\nimport defaultLayouts from './_layouts'\n\nconst GridLayout = VueGridLayout.GridLayout;\nconst GridItem = VueGridLayout.GridItem;\n\nconst breakpoints = {\n  xs: 575,\n  sm: 767,\n  md: 991,\n  lg: 1199,\n  xl: Infinity\n}\n\nconst gridCols = {xs: 1, sm: 2, md: 3, lg: 3, xl: 3 }\nconst localStorageKey = 'CoreUI-Draggable-Layouts'\n\nVue.use(VueMq, { breakpoints })\nVue.use(VueResize)\n\nexport default {\n  name: 'Draggable',\n  components: {\n    GridLayout,\n    GridItem,\n  },\n  data: function () {\n    return {\n      layouts: JSON.parse(localStorage.getItem(localStorageKey) || JSON.stringify(defaultLayouts)),\n      gridCols: gridCols,\n      margin: [10, 10],\n      rowHeight: 1\n    }\n  },\n  mounted: function () {\n    this.$nextTick(async function () {\n      // Code that will run only after the\n      // entire view has been re-rendered\n      await this.updateLayout()\n    })\n  },\n  computed: {\n    mqCols() {\n      const mq = this.$mq\n      return this.gridCols[mq]\n    },\n    mqLayout() {\n      const mq = this.$mq\n      const layouts = this.layouts\n      return layouts[mq]\n    }\n  },\n  methods: {\n    handleResize: async function(item) {\n      const mq = this.$mq\n      const layout = this.layouts[mq][item.i]\n      if (layout) {\n        const size = await this.getSize(item.i)\n        layout.h = Math.round((size.height - this.rowHeight) / 10)\n        this.updateLayout()\n      }\n    },\n    async getSize(itemId) {\n      let card = await document.getElementById(`coreui-dnd-card-no-${itemId}`)\n      let height = parseInt(window.getComputedStyle(card).getPropertyValue('height'), 10)\n      let width = parseInt(window.getComputedStyle(card).getPropertyValue('width'), 10)\n      return { height, width }\n    },\n    layoutUpdatedEvent: function(/*newLayout*/){\n      localStorage.setItem(localStorageKey, JSON.stringify(this.layouts))\n    },\n    resetLayout() {\n      this.layouts = JSON.parse(JSON.stringify(defaultLayouts))\n      localStorage.removeItem(localStorageKey)\n      this.updateLayout()\n    },\n    updateLayout() {\n      this.$refs.coreuiGridLayout.layoutUpdate()\n    }\n  }\n}\n</script>\n\n<style>\n.main {\n  overflow: hidden;\n}\n.vue-grid-item.vue-grid-placeholder {\n  background: gray!important;\n  border: thin dashed!important;\n}\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\n  .vue-grid-item .card.flex-fill {\n    display: block;\n  }\n}\n</style>\n\n"],"sourceRoot":"src/views/plugins"}]}